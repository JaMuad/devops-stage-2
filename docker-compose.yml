version: '3.8'
services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=muadmaalim@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"  #you can change stagning, production to have admin power or to local as well 
      - "--entrypoints.traefik.address=:8090"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8090"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.http.routers.redirect-to-non-www.rule=Host(`www.muadmaalim.buzz`)"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^http://www.(.*)"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=http://$${1}"
      - "traefik.http.routers.redirect-to-non-www.middlewares=redirect-to-non-www"
      - "traefik.http.routers.redirect-to-non-www.entrypoints=web"
      - "traefik.http.routers.redirect-to-non-www-secure.entrypoints=websecure"
      - "traefik.http.routers.redirect-to-non-www-secure.rule=Host(`www.muadmaalim.buzz`)"
      - "traefik.http.middlewares.redirect-to-non-www-secure.redirectregex.regex=^https://www.(.*)"
      - "traefik.http.middlewares.redirect-to-non-www-secure.redirectregex.replacement=https://$${1}"
      - "traefik.http.routers.redirect-to-non-www-secure.middlewares=redirect-to-non-www-secure"

      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.http-catchall.middlewares=https-redirect"

      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.muadmaalim.buzz`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8090"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
    networks:
      - web

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    environment:
      DOMAIN: muadmaalim.buzz
      ENVIRONMENT: production
      DATABASE_URL: postgres://app:hng123@db:5432/app
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`muadmaalim.buzz`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
    networks:
      - web

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`muadmaalim.buzz`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=4173"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    networks:
      - web

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: hng123
      POSTGRES_DB: app
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - web

  adminer:
    image: adminer
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.muadmaalim.buzz`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    networks:
      - web

volumes:
  postgres_data:
networks:
  web:
